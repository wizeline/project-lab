name: Run Deploy
on:
  workflow_call:
    inputs:
      branch_name:
        required: true
        type: string
      github_ref:
        required: true
        type: string
      AWS_SECRET_NAME:
        required: true
        type: string
    secrets:
      PIPELINE_AWS_ACCESS_KEY_ID:
        required: true
      PIPELINE_AWS_SECRET_ACCESS_KEY:
        required: true
      SSH_PRIVATE_KEY:
        required: true
      DB_URL:
        required: true
defaults:
  run:
    shell: bash
jobs:
  deploy-branch:
    env:
      NODE_ENV: "production"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.github_ref }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PIPELINE_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PIPELINE_AWS_SECRET_ACCESS_KEY  }}
          aws-region: us-east-1

      - name: Get Github Branch
        id: get-branch
        run: echo ::set-output name=branch::$(echo "${{ inputs.branch_name }}")

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Remove existing .env file
        run: rm -rf .env

      - name: Set .env File
        run: |
          aws secretsmanager get-secret-value --secret-id ${{ inputs.AWS_SECRET_NAME }} | jq -r '.SecretString' | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" > env-tmp
          cp env-tmp .env

      - name: Set Up App Domain
        run: |
          if [ "${{ inputs.branch_name }}" == "production" ]; then
            sed -i -e "s/http:\/\/localhost:3000/https:\/\/labs.wizeline.com/g" ./blitz.config.ts
          else
            sed -i -e "s/http:\/\/localhost:3000/https:\/\/${{ inputs.branch_name }}.labs.wizeline.com/g" ./blitz.config.ts
          fi

      - name: Terraform Change Workspace Lightsail
        uses: dflook/terraform-new-workspace@v1
        with:
          path: "terraform/lightsail/"
          workspace: ${{ inputs.branch_name }}

      - name: Terraform Apply Lightsail
        uses: dflook/terraform-apply@v1
        with:
          path: "terraform/lightsail/"
          workspace: ${{ inputs.branch_name }}
          auto_approve: true

      - id: get-lightsail-username
        name: Get Lightsail Instance Username
        run: echo ::set-output name=USERNAME::$(aws lightsail get-instance-access-details --instance-name project-lab-${{ inputs.branch_name }} | jq -r '.accessDetails.username')

      - id: get-lightsail-ip-address
        name: Get Lightsail Instance IP Address
        run: echo ::set-output name=IP_ADDRESS::$(aws lightsail get-instance-access-details --instance-name project-lab-${{ inputs.branch_name }} | jq -r '.accessDetails.ipAddress')

      - name: Prepare Server For Build
        uses: appleboy/ssh-action@master
        with:
          host: ${{steps.get-lightsail-ip-address.outputs.IP_ADDRESS}}
          username: ${{steps.get-lightsail-username.outputs.USERNAME}}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            rm -rf ~/projectlab/tmp
            mkdir -p ~/projectlab/app
            mkdir -p ~/projectlab/tmp

      - name: Remove Node Modules
        run: rm -rf node_modules

      - name: Copy Files To Lightsail Instance
        uses: wlixcc/SFTP-Deploy-Action@v1.0
        with:
          username: ${{steps.get-lightsail-username.outputs.USERNAME}}
          server: ${{steps.get-lightsail-ip-address.outputs.IP_ADDRESS}}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          local_path: "./*"
          remote_path: "/home/admin/projectlab/tmp/"
          args: "-o ConnectTimeout=60"

      - name: Configure Server
        uses: appleboy/ssh-action@master
        with:
          timeout: 60s
          command_timeout: 30m
          host: ${{steps.get-lightsail-ip-address.outputs.IP_ADDRESS}}
          username: ${{steps.get-lightsail-username.outputs.USERNAME}}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            chmod +x /home/admin/projectlab/tmp/scripts/setup.sh
            /home/admin/projectlab/tmp/scripts/setup.sh ${{ inputs.branch_name }} ${{ secrets.DB_URL }}
            rm -rf ~/projectlab/tmp

      - name: Terraform Change Workspace Distribution
        uses: dflook/terraform-new-workspace@v1
        with:
          path: "terraform/distribution/"
          workspace: ${{ inputs.branch_name }}

      - name: Terraform Apply Distribution
        uses: dflook/terraform-apply@v1
        with:
          path: "terraform/distribution/"
          workspace: ${{ inputs.branch_name }}
          auto_approve: true
          var: lightsail_instance_ip_address=${{steps.get-lightsail-ip-address.outputs.IP_ADDRESS}}
